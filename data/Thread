Thread Object Kernel BasicObject Class Module Object
new
start
fork
main
current
stop
kill
exit
pass
list
abort_on_exception
abort_on_exception=
exclusive
allocate
superclass
freeze
===
==
<=>
<
<=
>
>=
to_s
included_modules
include?
name
ancestors
instance_methods
public_instance_methods
protected_instance_methods
private_instance_methods
constants
const_get
const_set
const_defined?
const_missing
class_variables
remove_class_variable
class_variable_get
class_variable_set
class_variable_defined?
public_constant
private_constant
module_exec
class_exec
module_eval
class_eval
method_defined?
public_method_defined?
private_method_defined?
protected_method_defined?
public_class_method
private_class_method
autoload
autoload?
instance_method
public_instance_method
nil?
=~
!~
eql?
hash
class
singleton_class
clone
dup
initialize_dup
initialize_clone
taint
tainted?
untaint
untrust
untrusted?
trust
frozen?
inspect
methods
singleton_methods
protected_methods
private_methods
public_methods
instance_variables
instance_variable_get
instance_variable_set
instance_variable_defined?
instance_of?
kind_of?
is_a?
tap
send
public_send
respond_to?
respond_to_missing?
extend
display
method
public_method
define_singleton_method
object_id
to_enum
enum_for
equal?
!
!=
instance_eval
instance_exec
__send__
__id__
raise
join
value
terminate
run
wakeup
[]
[]=
key?
keys
priority
priority=
status
alive?
stop?
safe_level
group
backtrace
set_trace_func
add_trace_func
